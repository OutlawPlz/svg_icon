<?php
/**
* @file
* A description of what your module does.
*/

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;
use Drupal\svg_sprite\Entity\SvgSprite;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function svg_icon_menu_link_form_menu_link_content_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $form['svg_icon'] = array(
    '#type' => 'details',
    '#title' => t('Icon'),
    '#open' => TRUE
  );

  $form['svg_sprite']['#group'] = 'svg_icon';
  $form['icon_id']['#group'] = 'svg_icon';
  $form['icon_right']['#group'] = 'svg_icon';
  $form['hide_label']['#group'] = 'svg_icon';
}

/**
 * Implements hook_entity_base_field_info().
 */
function svg_icon_menu_link_entity_base_field_info(EntityTypeInterface $entity_type) {

  $fields = array();

  if ( $entity_type->get('id') !== 'menu_link_content' ) {
    return $fields;
  }

  $fields['svg_sprite'] = BaseFieldDefinition::create('list_string')
    ->setLabel('SVG Sprite')
    ->setDescription('Select the SVG sprite file.')
    ->setSettings(array(
      'allowed_values_function' => 'svg_icon_allowed_values_callback'
    ))
    ->setDisplayOptions('form', array(
      'type' => 'select',
      'weight' => 0,
      'settings' => array(
        'display_label' => TRUE
      )
    ));

  $fields['icon_id'] = BaseFieldDefinition::create('string')
    ->setLabel(t('Icon ID'))
    ->setDescription(t('Your icon ID.'))
    ->setDisplayOptions('form', array(
      'type' => 'textfield',
      'weight' => 0,
      'settings' => array(
        'display_label' => TRUE
      )
    ));

  $fields['icon_right'] = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Print right'))
    ->setDescription(t('Prints the icon on the right.'))
    ->setDisplayOptions('form', array(
      'type' => 'checkbox',
      'weight' => 0,
    ));

  $fields['hide_label'] = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Hide label'))
    ->setDescription(t('Display only the icon.'))
    ->setDisplayOptions('form', array(
      'type' => 'checkbox',
      'weight' => 0
    ));

  return $fields;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function svg_icon_menu_link_preprocess_menu(&$variables) {

  foreach ($variables['items'] as $key => $item) {

    /** @var \Drupal\menu_link_content\Plugin\Menu\MenuLinkContent $plugin */
    $plugin = $item['original_link'];

    // If the plugin is not instance of MenuLinkContent, continue.
    if (!$plugin instanceof MenuLinkContent) {
      continue;
    }

    list($entity_type, $uuid) = explode(':', $plugin->getPluginId(), 2);

    /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $menu_link_content */
    $menu_link_content = \Drupal::entityManager()->loadEntityByUuid($entity_type, $uuid);
    $config = $menu_link_content->get('svg_sprite')->value;

    // If no SVG sprite is selected, continue.
    if (!$config) {
      continue;
    }

    /** @var \Drupal\file\FileInterface $svg_sprite */
    $svg_sprite = SvgSprite::load($config)->getSvgSprite();

    $variables['items'][$key]['title'] = array(
      '#type' => 'svg_icon_text',
      '#label' => $item['title'],
      '#svg_sprite' => $svg_sprite,
      '#icon_id' => $menu_link_content->get('icon_id')->value,
      '#icon_right' => $menu_link_content->get('icon_right')->value,
      '#hide_label' => $menu_link_content->get('hide_label')->value
    );
  }
}

/**
 * Implements callback_allowed_values_function().
 */
function svg_icon_allowed_values_callback(FieldStorageDefinitionInterface $definition, FieldableEntityInterface $entity = NULL, &$cacheable = NULL) {

  return SvgSprite::getConfigList();
}
